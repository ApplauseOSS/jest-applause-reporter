!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("applause-reporter-common")):"function"==typeof define&&define.amd?define(["applause-reporter-common"],t):(e="undefined"!=typeof globalThis?globalThis:e||self)["jest-applause-reporter"]=t(e.applauseReporterCommon)}(this,(function(e){"use strict";return class{globalConfig;reporter;constructor(t,s){this.globalConfig=t;const r=e.loadConfig({properties:s});this.reporter=new e.ApplauseReporter(r)}onRunStart(){this.reporter.runnerStart()}async onRunComplete(){await this.reporter.runnerEnd()}onTestCaseStart(e,t){this.reporter.startTestCase(t.fullName,t.title,{providerSessionIds:globalThis.driverRegistry.getSessionIdsForTestCase(t.fullName)})}cleanErrorMessage(e){return e?.replace(/\x1B\[[0-9;]*m/g,"")}onTestCaseResult(e,t){const s=t.failureMessages.map((e=>this.cleanErrorMessage(e)||"")).join("\n");this.reporter.submitTestCaseResult(t.fullName,this.mapStatus(t),{failureReason:s,providerSessionGuids:globalThis.driverRegistry.getSessionIdsForTestCase(t.fullName)})}mapStatus(t){switch(t.status){case"passed":return e.TestResultStatus.PASSED;case"disabled":case"skipped":return e.TestResultStatus.SKIPPED;case"failed":return e.TestResultStatus.FAILED;default:throw new Error("yo, you shouldnt use this for tests that arent in a status auto-api doesnt support")}}}}));
//# sourceMappingURL=index.min.js.map

{"version":3,"file":"index.cjs","sources":["../src/index.ts"],"sourcesContent":["import { Reporter, TestCaseResult } from '@jest/reporters';\nimport { Test } from '@jest/test-result';\nimport { Circus } from '@jest/types';\nimport { Config } from 'jest';\nimport {\n  ApplauseConfig,\n  ApplauseReporter,\n  TestResultStatus,\n  loadConfig,\n} from 'applause-reporter-common';\n\nexport default class ApplauseJestReporter implements Reporter {\n  private reporter: ApplauseReporter;\n\n  constructor(\n    public globalConfig: Config,\n    options: Partial<ApplauseConfig>\n  ) {\n    const config = loadConfig({\n      properties: options,\n    });\n    this.reporter = new ApplauseReporter(config);\n  }\n\n  onRunStart(): void {\n    this.reporter.runnerStart();\n  }\n\n  async onRunComplete(): Promise<void> {\n    await this.reporter.runnerEnd();\n  }\n\n  onTestCaseStart(\n    _test: Test,\n    _testCaseStartInfo: Circus.TestCaseStartInfo\n  ): void {\n    this.reporter.startTestCase(\n      _testCaseStartInfo.fullName,\n      _testCaseStartInfo.title,\n      {\n        providerSessionIds: globalThis.driverRegistry.getSessionIdsForTestCase(\n          _testCaseStartInfo.fullName\n        ),\n      }\n    );\n  }\n\n  onTestCaseResult(_test: Test, _testCaseResult: TestCaseResult): void {\n    this.reporter.submitTestCaseResult(\n      _testCaseResult.fullName,\n      this.mapStatus(_testCaseResult),\n      {\n        failureReason: _testCaseResult.failureMessages.join(', '),\n        providerSessionGuids:\n          globalThis.driverRegistry.getSessionIdsForTestCase(\n            _testCaseResult.fullName\n          ),\n      }\n    );\n  }\n\n  private mapStatus(result: TestCaseResult): TestResultStatus {\n    switch (result.status) {\n      case 'passed':\n        return TestResultStatus.PASSED;\n      case 'disabled':\n        return TestResultStatus.SKIPPED;\n      case 'failed':\n        return TestResultStatus.FAILED;\n      case 'skipped':\n        return TestResultStatus.SKIPPED;\n      default:\n        throw new Error(\n          'yo, you shouldnt use this for tests that arent in a status auto-api doesnt support'\n        );\n    }\n  }\n}\n"],"names":["loadConfig","ApplauseReporter","TestResultStatus"],"mappings":";;;;AAWc,MAAO,oBAAoB,CAAA;AAI9B,IAAA,YAAA,CAAA;AAHD,IAAA,QAAQ,CAAmB;IAEnC,WACS,CAAA,YAAoB,EAC3B,OAAgC,EAAA;QADzB,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAQ;QAG3B,MAAM,MAAM,GAAGA,iCAAU,CAAC;AACxB,YAAA,UAAU,EAAE,OAAO;AACpB,SAAA,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,GAAG,IAAIC,uCAAgB,CAAC,MAAM,CAAC,CAAC;KAC9C;IAED,UAAU,GAAA;AACR,QAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;KAC7B;AAED,IAAA,MAAM,aAAa,GAAA;AACjB,QAAA,MAAM,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;KACjC;IAED,eAAe,CACb,KAAW,EACX,kBAA4C,EAAA;AAE5C,QAAA,IAAI,CAAC,QAAQ,CAAC,aAAa,CACzB,kBAAkB,CAAC,QAAQ,EAC3B,kBAAkB,CAAC,KAAK,EACxB;YACE,kBAAkB,EAAE,UAAU,CAAC,cAAc,CAAC,wBAAwB,CACpE,kBAAkB,CAAC,QAAQ,CAC5B;AACF,SAAA,CACF,CAAC;KACH;IAED,gBAAgB,CAAC,KAAW,EAAE,eAA+B,EAAA;AAC3D,QAAA,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAChC,eAAe,CAAC,QAAQ,EACxB,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,EAC/B;YACE,aAAa,EAAE,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC;YACzD,oBAAoB,EAClB,UAAU,CAAC,cAAc,CAAC,wBAAwB,CAChD,eAAe,CAAC,QAAQ,CACzB;AACJ,SAAA,CACF,CAAC;KACH;AAEO,IAAA,SAAS,CAAC,MAAsB,EAAA;AACtC,QAAA,QAAQ,MAAM,CAAC,MAAM;AACnB,YAAA,KAAK,QAAQ;gBACX,OAAOC,uCAAgB,CAAC,MAAM,CAAC;AACjC,YAAA,KAAK,UAAU;gBACb,OAAOA,uCAAgB,CAAC,OAAO,CAAC;AAClC,YAAA,KAAK,QAAQ;gBACX,OAAOA,uCAAgB,CAAC,MAAM,CAAC;AACjC,YAAA,KAAK,SAAS;gBACZ,OAAOA,uCAAgB,CAAC,OAAO,CAAC;AAClC,YAAA;AACE,gBAAA,MAAM,IAAI,KAAK,CACb,oFAAoF,CACrF,CAAC;SACL;KACF;AACF;;;;"}